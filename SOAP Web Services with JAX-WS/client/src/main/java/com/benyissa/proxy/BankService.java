
package com.benyissa.proxy;

import java.util.List;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.xml.bind.annotation.XmlSeeAlso;
import jakarta.xml.ws.Action;
import jakarta.xml.ws.RequestWrapper;
import jakarta.xml.ws.ResponseWrapper;


/**
 * This class was generated by the XML-WS Tools.
 * XML-WS Tools 4.0.0
 * Generated source version: 3.0
 * 
 */
@WebService(name = "BankService", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BankService {


    /**
     * 
     * @param code
     * @return
     *     returns com.benyissa.proxy.Account
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getAccount", targetNamespace = "http://ws/", className = "com.benyissa.proxy.GetAccount")
    @ResponseWrapper(localName = "getAccountResponse", targetNamespace = "http://ws/", className = "com.benyissa.proxy.GetAccountResponse")
    @Action(input = "http://ws/BankService/getAccountRequest", output = "http://ws/BankService/getAccountResponse")
    public Account getAccount(
        @WebParam(name = "code", targetNamespace = "")
        int code);

    /**
     * 
     * @return
     *     returns java.util.List<com.benyissa.proxy.Account>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "accountsList", targetNamespace = "http://ws/", className = "com.benyissa.proxy.AccountsList")
    @ResponseWrapper(localName = "accountsListResponse", targetNamespace = "http://ws/", className = "com.benyissa.proxy.AccountsListResponse")
    @Action(input = "http://ws/BankService/accountsListRequest", output = "http://ws/BankService/accountsListResponse")
    public List<Account> accountsList();

    /**
     * 
     * @param balance
     * @return
     *     returns double
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "convertToMAD", targetNamespace = "http://ws/", className = "com.benyissa.proxy.ConvertToMAD")
    @ResponseWrapper(localName = "convertToMADResponse", targetNamespace = "http://ws/", className = "com.benyissa.proxy.ConvertToMADResponse")
    @Action(input = "http://ws/BankService/convertToMADRequest", output = "http://ws/BankService/convertToMADResponse")
    public double convertToMAD(
        @WebParam(name = "balance", targetNamespace = "")
        double balance);

}
